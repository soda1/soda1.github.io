(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{370:function(s,t,a){"use strict";a.r(t);var n=a(7),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"使用组合索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用组合索引"}},[s._v("#")]),s._v(" 使用组合索引")]),s._v(" "),t("h4",{attrs:{id:"建表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建表"}},[s._v("#")]),s._v(" 建表")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" staffs "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  NAME "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'姓名'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  age "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'年龄'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  pos "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'职位'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  add_time "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TIMESTAMP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'入职时间'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARSET")]),s._v(" utf8 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'员工记录表'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" staffs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("add_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z3'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'manager'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NOW")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" staffs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("add_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'July'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dev'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NOW")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" staffs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("add_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2000'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dev'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NOW")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" staffs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("add_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dev'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NOW")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" staffs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" staffs "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" idx_staffs_nameAgePos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--建立组合索引")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/20201126172806.png",alt:"image-20201126172806829"}})]),s._v(" "),t("p",[s._v("组合索引实际上是建了3个索引，相当于Name是一级目录，age是2级目录，pos是三级目录。")]),s._v(" "),t("h4",{attrs:{id:"组合索引规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组合索引规则"}},[s._v("#")]),s._v(" 组合索引规则")]),s._v(" "),t("h5",{attrs:{id:"_1、全值匹配最喜欢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、全值匹配最喜欢"}},[s._v("#")]),s._v(" 1、全值匹配最喜欢")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--索引  idx_staffs_nameAgePos 建立索引时 以 name ， age ，pos 的顺序建立的。全值匹配表示 按顺序匹配的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" staffs "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'July'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" staffs "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'July'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" staffs "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" NAME "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'July'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" pos "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dev'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115133325639.png",alt:"image-20201115133325639"}}),s._v(" "),t("p",[s._v("全值匹配时key_len是最长的")]),s._v(" "),t("h5",{attrs:{id:"_2、最佳左前缀法则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、最佳左前缀法则"}},[s._v("#")]),s._v(" 2、最佳左前缀法则")]),s._v(" "),t("p",[s._v("如果索引了多列，要遵守最左前缀法则。指的是查询从索引的最左前列开始并且不跳过索引中的列")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115143806198.png",alt:"image-20201115143806198"}})]),s._v(" "),t("p",[s._v("and 忽略左右关系。即使没有按顺序 ，优化器也会自动优化。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115142725645.png",alt:"image-20201115142725645"}})]),s._v(" "),t("p",[t("strong",[s._v("特殊情况")]),s._v("：当使用覆盖索引的方式时，(select name/age/id from staffs where age=10 (后面没有其他没有索引的字段条件))，即使不是以 name 开头，也会使用 idx_nameAgePos 索引。  既 select 后的字段 有索引，where 后的字段也有索引，则无关执行顺序。")]),s._v(" "),t("h5",{attrs:{id:"_3、不在索引列上做任何操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、不在索引列上做任何操作"}},[s._v("#")]),s._v(" 3、不在索引列上做任何操作")]),s._v(" "),t("p",[s._v("在索引列上进行操作（计算、函数、(自动or手动)类型转换），会导致索引失效而转向全表扫描")]),s._v(" "),t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115145734678.png",alt:"image-20201115145734678"}}),s._v(" "),t("h5",{attrs:{id:"_4、存储引擎不能使用索引中范围条件右边的列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、存储引擎不能使用索引中范围条件右边的列"}},[s._v("#")]),s._v(" 4、存储引擎不能使用索引中范围条件右边的列")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115150214188.png",alt:"image-20201115150214188"}})]),s._v(" "),t("p",[s._v("根据索引原理，是根据"),t("code",[s._v("name，age，pos")]),s._v("来依次排序的，类似这样："),t("code",[s._v("('July', 26, 'aaa')、('July', 26, 'bbb')、('July', 26, 'ccc')、('July', 27, 'aaa')、('July', 27, 'bbb')")]),s._v("，因此范围查找后后面的列会索引失效")]),s._v(" "),t("h5",{attrs:{id:"_5、尽量使用覆盖索引-减少select"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、尽量使用覆盖索引-减少select"}},[s._v("#")]),s._v(" 5、尽量使用覆盖索引，减少select *")]),s._v(" "),t("p",[s._v("覆盖索引：只访问索引的查询(索引列和查询列一致)")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115150643038.png",alt:"image-20201115150643038"}})]),s._v(" "),t("p",[s._v("数据如果过大，如果使用select * 的话，查询的时间有可能比建立索引查询的时间还要少，因为需要回表。使用覆盖索引不会回表，从而减少查询时间。")]),s._v(" "),t("h5",{attrs:{id:"_6、不使用不等于-或者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、不使用不等于-或者"}},[s._v("#")]),s._v(" 6、不使用不等于(!= 或者<>)")]),s._v(" "),t("p",[s._v("会无法使用索引导致全表扫描")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115150950538.png",alt:"image-20201115150950538"}})]),s._v(" "),t("h5",{attrs:{id:"_7、is-not-null-也无法使用索引-但是is-null是可以使用索引的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、is-not-null-也无法使用索引-但是is-null是可以使用索引的"}},[s._v("#")]),s._v(" 7、is not null 也无法使用索引,但是is null是可以使用索引的")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115151447833.png",alt:"image-20201115151447833"}})]),s._v(" "),t("h5",{attrs:{id:"_8、like以通配符开头-abc-mysql索引失效会变成全表扫描的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、like以通配符开头-abc-mysql索引失效会变成全表扫描的操作"}},[s._v("#")]),s._v(" 8、like以通配符开头('%abc...')mysql索引失效会变成全表扫描的操作")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115152258583.png",alt:"image-20201115152258583"}})]),s._v(" "),t("p",[s._v("需要使用"),t("code",[s._v("%abc%")]),s._v("通配符时，可以使用覆盖索引，这样索引不会失效")]),s._v(" "),t("h5",{attrs:{id:"_9、字符串不加单引号索引失效"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、字符串不加单引号索引失效"}},[s._v("#")]),s._v(" 9、字符串不加单引号索引失效")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115152934351.png",alt:"image-20201115152934351"}})]),s._v(" "),t("h5",{attrs:{id:"_10、少用or-用它来连接时会索引失效"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10、少用or-用它来连接时会索引失效"}},[s._v("#")]),s._v(" 10、少用or,用它来连接时会索引失效")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201115153113960.png",alt:"image-20201115153113960"}})]),s._v(" "),t("h4",{attrs:{id:"一般性建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一般性建议"}},[s._v("#")]),s._v(" 一般性建议")]),s._v(" "),t("ol",[t("li",[s._v("对于单键索引，尽量选择针对当前query过滤性更好的索引")]),s._v(" "),t("li",[s._v("在选择组合索引的时候，当前query中过滤性最好的字段在索引字段顺序中，位置越靠前越好。(避免索引过滤性好的索引失效)")]),s._v(" "),t("li",[s._v("在选择组合索引的时候，尽量选择可以能够包含当前query中的where字句中更多字段的索引")]),s._v(" "),t("li",[s._v("尽可能通过分析统计信息和调整query的写法来达到选择合适索引的目的")])]),s._v(" "),t("h3",{attrs:{id:"join优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#join优化"}},[s._v("#")]),s._v(" join优化")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("保证被驱动表的join字段已经被索引")])]),s._v(" "),t("li",[t("p",[s._v("left join 时，默认选择左表作为驱动表（right join相反），因此选择小表作为驱动表，大表作为被驱动表。")])]),s._v(" "),t("li",[t("p",[s._v("inner join 时，mysql会自己帮你把小结果集的表选为驱动表。")])]),s._v(" "),t("li",[t("p",[s._v("子查询尽量不要放在被驱动表，有可能使用不到索引。")])])]),s._v(" "),t("h3",{attrs:{id:"in-、-exists使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#in-、-exists使用"}},[s._v("#")]),s._v(" in 、 exists使用")]),s._v(" "),t("p",[s._v("in的查询过程类似于下面")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("$result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n$users "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SELECT * FROM `user`"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n$orders "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SELECT user_id FROM `order`"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("$i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" $users"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("$i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("$j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" $orders"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("$j"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此过程为内存操作，不涉及数据库查询。")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$users"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("$i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" $orders"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("$j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            $result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" $users"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("$i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("如果in里面的表越大就不建议用in")]),s._v(" "),t("p",[s._v("order的查询过程类似于下面")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('$result = [];\n$users = "SELECT * FROM `user`";\nfor($i=0;$i<$users.length;$i++){\n    if(exists($users[$i].id)){// 执行SELECT * FROM `order` WHERE user.id = order.user_id\n        $result[] = $users[$i];\n    }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("当order表比user表大很多的时候，使用exists是再恰当不过了，它没有那么多遍历操作,只需要再执行一次查询就行，"),t("strong",[s._v("exist每次都会去查询数据库")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"order-by关键字优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order-by关键字优化"}},[s._v("#")]),s._v(" order by关键字优化")]),s._v(" "),t("p",[s._v("MySQL支持二种方式的排序，FileSort和Index，Index效率高.它指MySQL扫描索引本身完成排序。FileSort方式效率较低。")]),s._v(" "),t("h4",{attrs:{id:"使用index排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用index排序"}},[s._v("#")]),s._v(" 使用Index排序:")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("ORDER BY 语句使用索引最左前列")])]),s._v(" "),t("li",[t("p",[s._v("使用Where子句与Order BY子句条件列组合满足索引最左前列，where子句中如果出现索引的范围查询(即explain中出现range)会导致order by 索引失效。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/10EA75EA-0277-4DAF-AFEF-441F2B07EAA1.png",alt:"img"}})]),s._v(" "),t("p",[s._v("第二种中，where a = const and b > const order by b , c 不会出现 using filesort b , c 两个衔接上了。但是：where a = const and b > const order by c 将会出现 using filesort 。因为 b 用了范围索引，断了。而上一个 order by 后的b 用到了索引，所以能衔接上 c")])])]),s._v(" "),t("h4",{attrs:{id:"使用filesort排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用filesort排序"}},[s._v("#")]),s._v(" 使用filesort排序")]),s._v(" "),t("p",[s._v("如果不在索引列上，filesort有两种算法：mysql就要启动双路排序和单路排序")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("双路排序")]),s._v(" "),t("p",[s._v("MySQL 4.1之前是使用双路排序,字面意思就是两次扫描磁盘，最终得到数据")]),s._v(" "),t("p",[s._v("读取行指针和orderby列，对他们进行排序，然后扫描已经排序好的列表，按照列表中的值重新从列表中读取对应的数据输出---两次IO 从磁盘取排序字段，在buffer进行排序，再从磁盘取其他字段。")])]),s._v(" "),t("li",[t("p",[s._v("单路排序")]),s._v(" "),t("p",[s._v("从磁盘读取查询需要的所有列，按照order by列在buffer对它们进行排序，然后扫描排序后的列表进行输出，它的效率更快一些，避免了第二次读取数据。并且把随机IO变成了顺序IO,但是它会使用更多的空间，因为它把每一行都保存在内存中了。")])]),s._v(" "),t("li",[t("p",[s._v("结论及引申出的问题")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("由于单路是后出的，总体而言好过双路")])]),s._v(" "),t("li",[t("p",[s._v("在sort_buffer中，单路排序比双路排序要多占用很多空间，因为单路排序是把所有字段都取出, 所以有可能取出的数据的总大小"),t("strong",[s._v("超出了sort_buffer的容量")]),s._v("，导致每次只能取sort_buffer容量大小的数据，进行排序（创建tmp文件，多路合并），排完再取取sort_buffer容量大小，再排……从而多次I/O。")])])])]),s._v(" "),t("li",[t("p",[s._v("优化策略")]),s._v(" "),t("ul",[t("li",[s._v("增大sort_buffer_size参数的设置")]),s._v(" "),t("li",[s._v("增大max_length_for_sort_data参数的设置")]),s._v(" "),t("li",[s._v("去掉select 后面不需要的字段")])])])]),s._v(" "),t("h3",{attrs:{id:"group-by关键字优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#group-by关键字优化"}},[s._v("#")]),s._v(" GROUP BY关键字优化")]),s._v(" "),t("ul",[t("li",[s._v("group by实质是先排序后进行分组，遵照索引建的最佳左前缀")]),s._v(" "),t("li",[s._v("当无法使用索引列，增大max_length_for_sort_data参数的设置+增大sort_buffer_size参数的设置")]),s._v(" "),t("li",[s._v("where高于having，能写在where限定的条件就不要去having限定了。")]),s._v(" "),t("li",[s._v("尽量不要使用 distinct 关键字去重")])])])}),[],!1,null,null,null);t.default=r.exports}}]);