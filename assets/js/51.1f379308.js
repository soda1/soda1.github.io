(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{369:function(t,e,s){"use strict";s.r(e);var a=s(7),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h4",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("p",[t._v("使用EXPLAIN关键字可以模拟优化器执行SQL查询语句，从而知道MySQL是如何处理你的SQL语句的。分析你的查询语句或是表结构的性能瓶颈")]),t._v(" "),e("h4",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("语法")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  Explain + SQL语句\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("查看优化后的SQL语句")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("show warnings;\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("简单例子")]),t._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" titles "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" to_date"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'9999-01-01'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201113172657250.png",alt:"image-20201113172657250"}})])])]),t._v(" "),e("h4",{attrs:{id:"explain字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#explain字段"}},[t._v("#")]),t._v(" Explain字段")]),t._v(" "),e("h5",{attrs:{id:"id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[t._v("#")]),t._v(" id")]),t._v(" "),e("p",[t._v("select查询的序列号,包含一组数字，表示查询中执行select子句或操作表的顺序")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("id相同，执行顺序由上至下")]),t._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t3 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" t1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" t2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201113223418978.png",alt:"image-20201113223418978"}})])]),t._v(" "),e("li",[e("p",[t._v("id不同，如果是子查询，id的序号会递增，id值越大优先级越高，越先被执行")]),t._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explain")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" t2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t2 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" t2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" t3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t3 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" t3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t3_664'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201113223754251.png",alt:"image-20201113223754251"}})])]),t._v(" "),e("li",[e("p",[t._v("id相同不同，同时存在")]),t._v(" "),e("p",[t._v("id如果相同，可以认为是一组，从上往下顺序执行；\n在所有组中，id值越大，优先级越高，越先执行")])])]),t._v(" "),e("h5",{attrs:{id:"select-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#select-type"}},[t._v("#")]),t._v(" select_type")]),t._v(" "),e("p",[t._v("查询的类型，主要是用于区别：普通查询、联合查询、子查询等的复杂查询")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("SIMPLE")]),t._v(" "),e("p",[t._v("简单的 select 查询,查询中不包含子查询或者UNION")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201113224234083.png",alt:"image-20201113224234083"}})])]),t._v(" "),e("li",[e("p",[t._v("PRIMARY")]),t._v(" "),e("p",[t._v("查询中若包含任何复杂的子部分，最外层查询则被标记为Primary")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/EF90801E-0F46-4006-86B0-D00FF9A41BAB.png",alt:"image-20201113231321133"}})]),t._v(" "),e("ul",[e("li",[e("p",[t._v("DERIVED")]),t._v(" "),e("p",[t._v("在FROM列表中包含的子查询被标记为DERIVED(衍生)")]),t._v(" "),e("p",[t._v("MySQL会递归执行这些子查询, 把结果放在临时表里。")])]),t._v(" "),e("li",[e("p",[t._v("SUBQUERY")]),t._v(" "),e("p",[t._v("在SELECT或WHERE列表中包含了子查询，子查询结果为单值")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201113231321133.png",alt:"img"}})])]),t._v(" "),e("li",[e("p",[t._v("DEPENDENT SUBQUERY")]),t._v(" "),e("p",[t._v("在SELECT或WHERE列表中包含了子查询,子查询基于外层，子查询为多值")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/2F45DD10-6247-4FC7-A7DA-509AE0D9C949.png",alt:"img"}})])]),t._v(" "),e("li",[e("p",[t._v("UNCACHEABLE SUBQUERY")]),t._v(" "),e("p",[t._v("无法被缓存的子查询")])]),t._v(" "),e("li",[e("p",[t._v("UNION")]),t._v(" "),e("p",[t._v("若第二个SELECT出现在UNION之后，则被标记为UNION；")]),t._v(" "),e("p",[t._v("若UNION包含在FROM子句的子查询中,外层SELECT将被标记为：DERIVED")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201113231132956.png",alt:"image-20201113231132956"}})])]),t._v(" "),e("li",[e("p",[t._v("UNION RESULT")]),t._v(" "),e("p",[t._v("从UNION表获取结果的SELECT")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/image-20201113231242885.png",alt:"image-20201113231242885"}})])])]),t._v(" "),e("h5",{attrs:{id:"table"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table"}},[t._v("#")]),t._v(" table")]),t._v(" "),e("p",[t._v("显示这一行的数据是关于哪张表的")]),t._v(" "),e("h5",{attrs:{id:"partitions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#partitions"}},[t._v("#")]),t._v(" partitions")]),t._v(" "),e("h5",{attrs:{id:"type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" type")]),t._v(" "),e("p",[t._v("type显示的是访问类型，是较为重要的一个指标，结果值从最好到最坏依次是：")]),t._v(" "),e("p",[t._v("system > const > eq_ref > ref > fulltext > ref_or_null > index_merge > unique_subquery > index_subquery > range(尽量保证) > index > ALL")]),t._v(" "),e("p",[t._v("一般来说，得保证查询至少达到range级别，最好能达到ref。")]),t._v(" "),e("blockquote",[e("p",[t._v("The "),e("code",[t._v("type")]),t._v(" column of "),e("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/explain.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("EXPLAIN")]),e("OutboundLink")],1),t._v(" output describes how tables are joined. In JSON-formatted output, these are found as values of the "),e("code",[t._v("access_type")]),t._v(" property. The following list describes the join types, ordered from the best type to the worst:")])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("system")]),t._v("：表只有一行记录（等于系统表），这是const类型的特列，平时不会出现，这个也可以忽略不计")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("const")]),t._v("：表示通过索引一次就找到了,const用于比较primary key或者unique索引。因为只匹配一行数据，所以很快。如将主键置于where列表中，MySQL就能将该查询转换为一个常量")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("eq_ref")]),t._v("：唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配。常见于主键或唯一索引扫描")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("ref")]),t._v("：非唯一性索引扫描，返回匹配某个单独值的所有行.本质上也是一种索引访问，它返回所有匹配某个单独值的行，然而，它可能会找到多个符合条件的行，所以他应该属于查找和扫描的混合体")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("fulltext")]),t._v("：执行使用全文索引")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("ref_or_null")]),t._v("：对于某个字段既需要关联条件，也需要null值得情况下。查询优化器会选择用ref_or_null连接查询。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("index_merge")]),t._v("：在查询过程中需要多个索引组合使用，通常出现在有 or 的关键字的sql中")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("unique_subquery")]),t._v("：该联接类型类似于index_subquery。 子查询中的唯一索引")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("index_subquery")]),t._v("：利用索引来关联子查询，不再全表扫描。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("range")]),t._v("：只检索给定范围的行,使用一个索引来选择行。key 列显示使用了哪个索引，一般就是在你的where语句中出现了between、<、>、in等的查询")]),t._v(" "),e("p",[t._v("这种范围扫描索引扫描比全表扫描要好，因为它只需要开始于索引的某一点，而结束语另一点，不用扫描全部索引。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("index")]),t._v("：Full Index Scan，index与ALL区别为index类型只遍历索引树。这通常比ALL快，"),e("em",[t._v("因为索引文件通常比数据文件小")]),t._v("。（也就是说虽然all和Index都是读全表，但index是从索引中读取的，而all是从硬盘中读的）")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("ALL")]),t._v("：Full Table Scan，将遍历全表以找到匹配的行")])])]),t._v(" "),e("h5",{attrs:{id:"possible-keys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#possible-keys"}},[t._v("#")]),t._v(" possible_keys")]),t._v(" "),e("p",[t._v("显示可能应用在这张表中的索引，一个或多个。查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询实际使用")]),t._v(" "),e("h5",{attrs:{id:"key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key"}},[t._v("#")]),t._v(" key")]),t._v(" "),e("p",[t._v("实际使用的索引名。如果为NULL，则没有使用索引")]),t._v(" "),e("h5",{attrs:{id:"key-len"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key-len"}},[t._v("#")]),t._v(" key_len")]),t._v(" "),e("p",[t._v("表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度。")]),t._v(" "),e("p",[t._v("key_len字段能够帮你检查是否充分的利用上了索引")]),t._v(" "),e("h5",{attrs:{id:"ref"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" ref")]),t._v(" "),e("p",[t._v("显示索引的哪一列被使用了，如果可能的话，是一个常数。哪个索引列或常量被用来查找值")]),t._v(" "),e("h5",{attrs:{id:"rows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rows"}},[t._v("#")]),t._v(" rows")]),t._v(" "),e("p",[t._v("rows列显示MySQL认为它执行查询时必须检查的行数。越少越好")]),t._v(" "),e("h5",{attrs:{id:"filtered"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtered"}},[t._v("#")]),t._v(" filtered")]),t._v(" "),e("blockquote",[e("p",[t._v("The "),e("code",[t._v("filtered")]),t._v(" column indicates an estimated percentage of table rows that are filtered by the table condition. The maximum value is 100, which means no filtering of rows occurred. Values decreasing from 100 indicate increasing amounts of filtering. "),e("code",[t._v("rows")]),t._v(" shows the estimated number of rows examined and "),e("code",[t._v("rows")]),t._v(" × "),e("code",[t._v("filtered")]),t._v(" shows the number of rows that are joined with the following table. For example, if "),e("code",[t._v("rows")]),t._v(" is 1000 and "),e("code",[t._v("filtered")]),t._v(" is 50.00 (50%), the number of rows to be joined with the following table is 1000 × 50% = 500.")])]),t._v(" "),e("h5",{attrs:{id:"extra"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extra"}},[t._v("#")]),t._v(" Extra")]),t._v(" "),e("p",[t._v("包含不适合在其他列中显示但十分重要的额外信息")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Using filesort：说明mysql会对数据使用一个外部的索引排序，而不是按照表内的索引顺序进行读取。MySQL中无法利用索引完成的排序操作称为“文件排序”")])]),t._v(" "),e("li",[e("p",[t._v("Using temporary ：使了用临时表保存中间结果,MySQL在对查询结果排序时使用临时表。常见于排序 order by 和分组查询 group by。")])]),t._v(" "),e("li",[e("p",[t._v("Using index：表示相应的select操作中使用了覆盖索引(Covering Index)，避免访问了表的数据行，效率不错！")]),t._v(" "),e("p",[t._v("如果同时出现using where，表明索引被用来执行索引键值的查找;如果没有同时出现using where，表明索引只是用来读取数据而非利用索引执行查找。")]),t._v(" "),e("p",[t._v("覆盖索引：就是select的字段和查找时用的索引的字段是相同的，这样不用读取数据中查找其他行了。")])]),t._v(" "),e("li",[e("p",[t._v("Using where：使用where过滤")])]),t._v(" "),e("li",[e("p",[t._v("using join buffer：使用连接缓存")])]),t._v(" "),e("li",[e("p",[t._v("impossible where：where子句的值总是false，不能用来获取任何元组")])]),t._v(" "),e("li",[e("p",[t._v("select tables optimized away：在没有GROUPBY子句的情况下，基于索引优化MIN/MAX操作或者对于MyISAM存储引擎优化COUNT(*)操作，不必等到执行阶段再进行计算，查询执行计划生成的阶段即完成优化。")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);