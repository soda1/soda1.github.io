(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{443:function(a,s,e){"use strict";e.r(s);var t=e(4),n=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h4",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),s("p",[a._v("在.git文件里面有如下内容")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// 文件\n|-- COMMIT_EDITMSG\n|-- HEAD\n|-- config\n|-- description\n|-- index\n// 子文件夹\n|-- hooks\n|-- info\n|-- logs\n|-- objects\n`-- refs\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[a._v("在这个目录下它有文件和子文件夹，其中")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("HEAD")]),a._v(": 当前分支的引用/提交的hash值（detach状态），随着分支的切换/提交而更新")]),a._v(" "),s("li",[s("code",[a._v("config")]),a._v(": 仓库配置")]),a._v(" "),s("li",[s("code",[a._v("objects/")]),a._v(": 所有的提交文件都会保存在这里，有blob、commit、tree三种类型")]),a._v(" "),s("li",[s("code",[a._v("refs")]),a._v(": 每个分支的head及tag都会存在这里")])]),a._v(" "),s("h4",{attrs:{id:"object类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object类型"}},[a._v("#")]),a._v(" Object类型")]),a._v(" "),s("h5",{attrs:{id:"blob-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#blob-object"}},[a._v("#")]),a._v(" Blob Object")]),a._v(" "),s("p",[a._v("Blob（Binary Large Object）对象是用于存储文件内容，它表示一个文件的快照或数据块，并且以不可变的方式存储。")]),a._v(" "),s("p",[a._v("当我们编辑一个文件的后使用"),s("code",[a._v("git add .")]),a._v("，git将会对文件的所有内容通过SHA-1算法来计算hash值，然后在objects文件中"),s("strong",[a._v("以hash值前2位为子文件夹，后续的hash值为文件")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ tree .git/objects\n.git/objects\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("-- 05\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("   `-- 9f1c5e237f7e0106b5ddf7dcb8da93f8f27a7c\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("我们可以使用"),s("code",[a._v("git cat-flie")]),a._v("来查看object的类型及其内容")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("查看类型")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cat-file "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" a10b4007c87dcd854b6633583b2c7dbd35bf3dd0\nblob\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("查看内容")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cat-file "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" a10b4007c87dcd854b6633583b2c7dbd35bf3dd0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("概念\ndgasga\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])])]),a._v(" "),s("h5",{attrs:{id:"commit-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-object"}},[a._v("#")]),a._v(" Commit Object")]),a._v(" "),s("p",[a._v("Commit对象是用于存储代码提交信息的一种对象类型。它包含了一次代码提交的作者、提交时间、提交消息以及指向该次提交的父节点的引用")]),a._v(" "),s("p",[a._v("一个Commit对象包含以下信息：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("作者（Author）")]),a._v("：指定提交的作者，通常是一个包含姓名和电子邮件地址的标识符。")]),a._v(" "),s("li",[s("strong",[a._v("提交时间（Commit Time）")]),a._v("：记录提交的时间戳，表示代码何时被提交。")]),a._v(" "),s("li",[s("strong",[a._v("提交消息（Commit Message）")]),a._v("：包含了提交的描述信息，通常是一段文本，用于说明提交的目的和变更内容。")]),a._v(" "),s("li",[s("strong",[a._v("父节点（Parent）")]),a._v("：指向一个或多个父节点Commit对象的引用，用于构建提交历史的有向图结构。")])]),a._v(" "),s("p",[a._v("使用"),s("code",[a._v("git commit")]),a._v("时会生成一个commit对象及一个tree对象")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cat-file "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" 8641cb011143ad7125ebf37134a85215fea05aad\ntree 322eab11021d27d85ff7206af9aa0b186b511a0b "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#指向的tree object")]),a._v("\nparent 48b20f7614d760e047357878a5ef7996deaf7852 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#第一次提交没有parent信息")]),a._v("\nauthor eric "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("xxx@gmail.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1687602491")]),a._v(" +0800\ncommitter eric "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("xxx@gmail.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1687602491")]),a._v(" +0800\n\nsecond\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h5",{attrs:{id:"tree-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tree-object"}},[a._v("#")]),a._v(" Tree Object")]),a._v(" "),s("p",[a._v("Tree（树）对象是一种用于存储目录结构和文件快照的对象类型，类似于文件系统中的目录树，每一次提交都会由于文件的hash值改变而生成新的tree对象")]),a._v(" "),s("p",[a._v("每个Tree对象包含以下信息：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("文件和子目录的引用")]),a._v("：Tree对象存储了文件和子目录的引用，每个引用都包含了文件名或目录名、文件类型（例如Blob或另一个Tree）、文件模式（如权限位）以及指向相应对象的SHA-1哈希值。")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cat-file "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" 21a326d23d74928defeeaf6763b3cefc4ced2f00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100644")]),a._v(" blob 46138fa9175251b0bbb64150d64113d4504d7f59    a.txt\n040000 tree ec5e386905ff2d36e291086a1207f2585aaa8920    hh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("可以使用"),s("code",[a._v("git ls-tree <branch>")]),a._v(" 查看最近一次存储的目录树")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-tree master\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100644")]),a._v(" blob 46138fa9175251b0bbb64150d64113d4504d7f59    a.txt\n040000 tree ec5e386905ff2d36e291086a1207f2585aaa8920    hh\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"版本管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本管理"}},[a._v("#")]),a._v(" 版本管理")]),a._v(" "),s("p",[a._v("每个commit对象都代表着代码库中的一个版本，commit对象相当于是作为入口，可以从commit对象中找到对应的tree对象，然后获取blob对象在当前版本的对应内容")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/soda1/img/main/20230624191455.png",alt:""}})]),a._v(" "),s("center",[a._v("commit、tree、blob对象之间的关系（图片来自https://tonybai.com/2020/04/07/illustrated-tale-of-git-internal-key-concepts/）")]),a._v(" "),s("p",[a._v("参考：")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://dev.to/wassimchegham/behind-the-git-sha-dow-1pib",title:"Understanding Git Internals",target:"_blank",rel:"noopener noreferrer"}},[a._v("Understanding Git Internals"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("a",{attrs:{href:"https://tonybai.com/2020/04/07/illustrated-tale-of-git-internal-key-concepts/",title:"图解git原理的几个关键概念",target:"_blank",rel:"noopener noreferrer"}},[a._v("图解git原理的几个关键概念"),s("OutboundLink")],1)])],1)}),[],!1,null,null,null);s.default=n.exports}}]);