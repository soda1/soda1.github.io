(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{410:function(t,s,e){"use strict";e.r(s);var _=e(4),a=Object(_.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"join的使用的算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join的使用的算法"}},[t._v("#")]),t._v(" join的使用的算法")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("index nested-loop join（NLJ）")]),t._v(" "),s("p",[t._v("join的条件中如果可以走索引，那么就会使用此算法")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-mysql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select * from t1 straight_join t2 on (t1.a = t2.a)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("步骤如下")]),t._v(" "),s("ol",[s("li",[t._v("从t1中取出一行数据")]),t._v(" "),s("li",[t._v("从这行数据中取出a字段，然后去t2中通过树索引找到匹配的数据")]),t._v(" "),s("li",[t._v("将数据合成一行加入结果集")]),t._v(" "),s("li",[t._v("重复1-3步骤")])])]),t._v(" "),s("li",[s("p",[t._v("block nested-loop join（BNL）")]),t._v(" "),s("p",[t._v("如果join的条件无法走索引，那么会将驱动表加入join__buffer，然后在去遍历被驱动表")]),t._v(" "),s("p",[t._v("例子")]),t._v(" "),s("div",{staticClass:"language-mysql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select * from t1 straight_join t2 on (t1.a = t2.b) //b没有索引\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("步骤如下")]),t._v(" "),s("ol",[s("li",[t._v("从t1中取出所有的数据加入join_buffer")]),t._v(" "),s("li",[t._v("从t2中取出一行数据R")]),t._v(" "),s("li",[t._v("将R与join_buffer里面的t1数据进行匹配，加入结果集")]),t._v(" "),s("li",[t._v("重复2-3步骤")])]),t._v(" "),s("p",[t._v("如果join_buffer不能容纳t1中所有的数据，那么就会执行分批放的策略")])])]),t._v(" "),s("h3",{attrs:{id:"优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("小表驱动大表")]),t._v(" "),s("p",[t._v("无论什么时候都应该用小表去驱动大表，即小数据驱动大数据")])]),t._v(" "),s("li",[s("p",[t._v("转BKA算法")]),t._v(" "),s("p",[t._v("BKA优化开启")]),t._v(" "),s("div",{staticClass:"language-mysql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("set optimizer_switch='mrr=on,mrr_cost_based=off,batched_key_access=on';\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ol",[s("li",[s("p",[t._v("INJ 转 BKA")]),t._v(" "),s("p",[t._v("只要开启BKA优化即可，通过使用join_buffer来读驱动表数据，然后在通过MRR优化来顺序读取读取数据")])]),t._v(" "),s("li",[s("p",[t._v("BNL转BKA")]),t._v(" "),s("p",[t._v("对于一些冷数据查询，建立索引会显得浪费，那么如果可以通过创建临时表的方法将被驱动表中符合条件的数据放入创建的临时表并创建索引。用临时表作为被驱动表，这样就可以使用BKA优化了")])])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);