(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{411:function(_,v,t){"use strict";t.r(v);var n=t(4),o=Object(n.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h4",{attrs:{id:"innodb"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#innodb"}},[_._v("#")]),_._v(" InnoDB")]),_._v(" "),v("p",[_._v("InnoDB是MySQL的默认事务型引擎，它被设计用来处理大量的短期(short-lived)事务。除非有非常特别的原因需要使用其他的存储引擎，否则应该优先考虑InnoDB引擎。行级锁，适合高并发情况。InnoDB主键索引 为聚簇索引，使用 B+树结构存储索引，在叶子节点存储真实数据，即索引和数据是存储在同一个文件中。")]),_._v(" "),v("p",[_._v("InnoDB还引入了行级锁定和外键约束，在以下场合下，使用InnoDB是最理想的选择：")]),_._v(" "),v("ul",[v("li",[_._v("更新密集的表。 InnoDB存储引擎特别适合处理多重并发的更新请求。")]),_._v(" "),v("li",[_._v("事务。 InnoDB存储引擎是支持事务的标准MySQL存储引擎。")]),_._v(" "),v("li",[_._v("自动灾难恢复。 与其它存储引擎不同，InnoDB表能够自动从灾难中恢复。")]),_._v(" "),v("li",[_._v("外键约束。 MySQL支持外键的存储引擎只有InnoDB。")]),_._v(" "),v("li",[_._v("支持自动增加列AUTO_INCREMENT属性。")]),_._v(" "),v("li",[_._v("从5.7开始innodb存储引擎成为默认的存储引擎。")])]),_._v(" "),v("p",[_._v("一般来说，如果需要事务支持，并且有较高的并发读取频率，InnoDB是不错的选择。")]),_._v(" "),v("h4",{attrs:{id:"myisam"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#myisam"}},[_._v("#")]),_._v(" MyISAM")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("MyISAM提供了大量的特性，包括全文索引、压缩、空间函数(GIS)等，但MyISAM不支持事务和行级锁(myisam改表时会将整个表全锁住)，有一个毫无疑问的缺陷就是崩溃后无法安全恢复。 MyISAM索引同样使用 b+树结构来存储，和InnoDB不同的是，没有存储数据，只是存储数据的指针。数据存储在另一个文件中")])]),_._v(" "),v("li",[v("p",[_._v("每当我们建立一个MyISAM引擎的表时，就会在本地磁盘上建立三个文件，文件名就是表名。")]),_._v(" "),v("p",[_._v("例如，我建立了一个MyISAM引擎的tb_Demo表，那么就会生成以下三个文件：")]),_._v(" "),v("ul",[v("li",[_._v("tb_demo.frm，存储表定义。")]),_._v(" "),v("li",[_._v("tb_demo.MYD，存储数据。")]),_._v(" "),v("li",[_._v("tb_demo.MYI，存储索引。")])])]),_._v(" "),v("li",[v("p",[_._v("MyISAM表无法处理事务，这就意味着有事务处理需求的表，不能使用MyISAM存储引擎。MyISAM存储引擎特别适合在以下几种情况下使用：")]),_._v(" "),v("ul",[v("li",[_._v("选择密集型的表。 MyISAM存储引擎在筛选大量数据时非常迅速，这是它最突出的优点。")]),_._v(" "),v("li",[_._v("插入密集型的表。 MyISAM的并发插入特性允许同时选择和插入数据。")])])])]),_._v(" "),v("h4",{attrs:{id:"对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对比"}},[_._v("#")]),_._v(" 对比")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("存储引擎")]),_._v(" "),v("th",[_._v("外键")]),_._v(" "),v("th",[_._v("事务")]),_._v(" "),v("th",[_._v("缓存")]),_._v(" "),v("th",[_._v("行表锁")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("MyISAM")]),_._v(" "),v("td",[_._v("不支持")]),_._v(" "),v("td",[_._v("不支持")]),_._v(" "),v("td",[_._v("只缓存索引，不缓存真实数据")]),_._v(" "),v("td",[_._v("表锁，即使操作一条记录也会锁住整个表，不适合高并发的操作")])]),_._v(" "),v("tr",[v("td",[_._v("InnoDB")]),_._v(" "),v("td",[_._v("支持")]),_._v(" "),v("td",[_._v("支持")]),_._v(" "),v("td",[_._v("不仅缓存索引还要缓存真实数据")]),_._v(" "),v("td",[_._v("行锁、表锁,操作时只锁某一行，不对其它行有影响，适合,高并发的操作")])])])])])}),[],!1,null,null,null);v.default=o.exports}}]);