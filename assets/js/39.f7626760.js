(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{397:function(a,e,t){"use strict";t.r(e);var s=t(4),v=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h4",{attrs:{id:"端口监听查看"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#端口监听查看"}},[a._v("#")]),a._v(" 端口监听查看：")]),a._v(" "),e("ul",[e("li",[a._v("ss -tln 查看TCP的listen的端口")]),a._v(" "),e("li",[a._v("ss -tlnp 查看哪些进程使用了监听端口")])]),a._v(" "),e("h4",{attrs:{id:"开放端口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开放端口"}},[a._v("#")]),a._v(" 开放端口")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#cetost 7")]),a._v("\nfirewall-cmd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("端口号/tcp "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--permanent")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#重启防火墙")]),a._v("\nsystemctl restart firewalld.service \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看开放端口")]),a._v("\nfirewall-cmd --list-ports\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("h4",{attrs:{id:"防火墙"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防火墙"}},[a._v("#")]),a._v(" 防火墙")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#centos 7")]),a._v("\nsystemctl status firewalld.service "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#防火墙状态")]),a._v("\nsystemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" firewalld.service "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#开机自启防火墙")]),a._v("\nsystemctl start firewalld.service "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#开启防火墙")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 6")]),a._v("\nsystemctl status iptables "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("或service iptables status"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" 查看防火墙状态\nsystemctl stop iptables"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("或service iptables stop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" 关闭防火墙\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("h4",{attrs:{id:"系统信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#系统信息"}},[a._v("#")]),a._v(" 系统信息")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("curl "),e("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//ifconfig.me/",target:"_blank",rel:"noopener noreferrer"}},[a._v("ifconfig.me"),e("OutboundLink")],1),a._v(" 查找本机公网IP")])]),a._v(" "),e("li",[e("p",[a._v("arch 显示机器的处理器架构(1)")])]),a._v(" "),e("li",[e("p",[a._v("uname -m 显示机器的处理器架构(2)")])]),a._v(" "),e("li",[e("p",[a._v("uname -r 显示正在使用的内核版本")])]),a._v(" "),e("li",[e("p",[a._v("dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI)")])]),a._v(" "),e("li",[e("p",[a._v("hdparm -i /dev/hda 罗列一个磁盘的架构特性")])]),a._v(" "),e("li",[e("p",[a._v("hdparm -tT /dev/sda 在磁盘上执行测试性读取操作")])]),a._v(" "),e("li",[e("p",[a._v("cat /proc/cpuinfo 显示CPU info的信息")])]),a._v(" "),e("li",[e("p",[a._v("cat /proc/interrupts 显示中断")])]),a._v(" "),e("li",[e("p",[a._v("cat /proc/meminfo 校验内存使用")])]),a._v(" "),e("li",[e("p",[a._v("cat /proc/swaps 显示哪些swap被使用")])]),a._v(" "),e("li",[e("p",[a._v("cat /proc/version 显示内核的版本")])]),a._v(" "),e("li",[e("p",[a._v("cat /proc/net/dev 显示网络适配器及统计")])]),a._v(" "),e("li",[e("p",[a._v("cat /proc/mounts 显示已加载的文件系统")])]),a._v(" "),e("li",[e("p",[a._v("lspci -tv 罗列 PCI 设备")])]),a._v(" "),e("li",[e("p",[a._v("lsusb -tv 显示 USB 设备")])]),a._v(" "),e("li",[e("p",[a._v("date 显示系统日期")])]),a._v(" "),e("li",[e("p",[a._v("cal 2007 显示2007年的日历表")])]),a._v(" "),e("li",[e("p",[a._v("date 041217002007.00 设置日期和时间 - 月日时分年.秒")])]),a._v(" "),e("li",[e("p",[a._v("clock -w 将时间修改保存到 BIOS")])])]),a._v(" "),e("h4",{attrs:{id:"ps命令常用用法-方便查看系统进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ps命令常用用法-方便查看系统进程"}},[a._v("#")]),a._v(" ps命令常用用法（方便查看系统进程）")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("1）ps a 显示现行终端机下的所有程序，包括其他用户的程序。")])]),a._v(" "),e("li",[e("p",[a._v("2）ps -A 显示所有进程。")])]),a._v(" "),e("li",[e("p",[a._v("3）ps c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。")])]),a._v(" "),e("li",[e("p",[a._v('4）ps -e 此参数的效果和指定"A"参数相同。')])]),a._v(" "),e("li",[e("p",[a._v("5）ps e 列出程序时，显示每个程序所使用的环境变量。")])]),a._v(" "),e("li",[e("p",[a._v("6）ps f 用ASCII字符显示树状结构，表达程序间的相互关系。")])]),a._v(" "),e("li",[e("p",[a._v("7）ps -H 显示树状结构，表示程序间的相互关系。")])]),a._v(" "),e("li",[e("p",[a._v("8）ps -N 显示所有的程序，除了执行ps指令终端机下的程序之外。")])]),a._v(" "),e("li",[e("p",[a._v("9）ps s 采用程序信号的格式显示程序状况。")])]),a._v(" "),e("li",[e("p",[a._v("10）ps S 列出程序时，包括已中断的子程序资料。")])]),a._v(" "),e("li",[e("p",[a._v("11）ps -t<终端机编号> 　指定终端机编号，并列出属于该终端机的程序的状况。")])]),a._v(" "),e("li",[e("p",[a._v("12）ps u 　以用户为主的格式来显示程序状况。")])]),a._v(" "),e("li",[e("p",[a._v("13）ps x 　显示所有程序，不以终端机来区分。")])]),a._v(" "),e("li",[e("p",[a._v("常用指令组合 ：ps aux,然后再通过管道使用grep命令过滤查找特定的进程,然后再对特定的进程进行操作。")])]),a._v(" "),e("li",[e("p",[a._v("ps aux | grep program_filter_word,ps -ef |grep tomcat")])]),a._v(" "),e("li",[e("p",[a._v("ps -ef|grep java|grep -v grep 显示出所有的java进程，去处掉当前的grep进程。")])])]),a._v(" "),e("h4",{attrs:{id:"关机-系统的关机、重启以及登出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关机-系统的关机、重启以及登出"}},[a._v("#")]),a._v(" 关机 (系统的关机、重启以及登出 )")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("shutdown -h now 关闭系统(1)")])]),a._v(" "),e("li",[e("p",[a._v("init 0 关闭系统(2)")])]),a._v(" "),e("li",[e("p",[a._v("telinit 0 关闭系统(3)")])]),a._v(" "),e("li",[e("p",[a._v("shutdown -h hours:minutes & 按预定时间关闭系统")])]),a._v(" "),e("li",[e("p",[a._v("shutdown -c 取消按预定时间关闭系统")])]),a._v(" "),e("li",[e("p",[a._v("shutdown -r now 重启(1)")])]),a._v(" "),e("li",[e("p",[a._v("reboot 重启(2)")])]),a._v(" "),e("li",[e("p",[a._v("logout 注销")])])]),a._v(" "),e("h4",{attrs:{id:"文件和目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件和目录"}},[a._v("#")]),a._v(" 文件和目录")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("cd /home 进入 '/ home' 目录'")])]),a._v(" "),e("li",[e("p",[a._v("cd .. 返回上一级目录")])]),a._v(" "),e("li",[e("p",[a._v("cd ../.. 返回上两级目录")])]),a._v(" "),e("li",[e("p",[a._v("cd 进入个人的主目录")])]),a._v(" "),e("li",[e("p",[a._v("cd ~user1 进入个人的主目录")])]),a._v(" "),e("li",[e("p",[a._v("cd - 返回上次所在的目录")])]),a._v(" "),e("li",[e("p",[a._v("pwd 显示工作路径")])]),a._v(" "),e("li",[e("p",[a._v("ls 查看目录中的文件")])]),a._v(" "),e("li",[e("p",[a._v("ls -F 查看目录中的文件")])]),a._v(" "),e("li",[e("p",[a._v("ls -l 显示文件和目录的详细资料")])]),a._v(" "),e("li",[e("p",[a._v("ls -a 显示隐藏文件")])]),a._v(" "),e("li",[e("p",[a._v("ls "),e("em",[a._v("[0-9]")]),a._v(" 显示包含数字的文件名和目录名")])]),a._v(" "),e("li",[e("p",[a._v("tree 显示文件和目录由根目录开始的树形结构(1)")])]),a._v(" "),e("li",[e("p",[a._v("lstree 显示文件和目录由根目录开始的树形结构(2)")])]),a._v(" "),e("li",[e("p",[a._v("mkdir dir1 创建一个叫做 'dir1' 的目录'")])]),a._v(" "),e("li",[e("p",[a._v("mkdir dir1 dir2 同时创建两个目录")])]),a._v(" "),e("li",[e("p",[a._v("mkdir -p /tmp/dir1/dir2 创建一个目录树")])]),a._v(" "),e("li",[e("p",[a._v("rm -f file1 删除一个叫做 'file1' 的文件'")])]),a._v(" "),e("li",[e("p",[a._v("rmdir dir1 删除一个叫做 'dir1' 的目录'")])]),a._v(" "),e("li",[e("p",[a._v("rm -rf dir1 删除一个叫做 'dir1' 的目录并同时删除其内容")])]),a._v(" "),e("li",[e("p",[a._v("rm -rf dir1 dir2 同时删除两个目录及它们的内容")])]),a._v(" "),e("li",[e("p",[a._v("mv dir1 new_dir 重命名/移动 一个目录")])]),a._v(" "),e("li",[e("p",[a._v("cp file1 file2 复制一个文件")])]),a._v(" "),e("li",[e("p",[a._v("cp dir/* . 复制一个目录下的所有文件到当前工作目录")])]),a._v(" "),e("li",[e("p",[a._v("cp -a /tmp/dir1 . 复制一个目录到当前工作目录")])]),a._v(" "),e("li",[e("p",[a._v("cp -a dir1 dir2 复制一个目录")])]),a._v(" "),e("li",[e("p",[a._v("ln -s file1 lnk1 创建一个指向文件或目录的软链接")])]),a._v(" "),e("li",[e("p",[a._v("ln file1 lnk1 创建一个指向文件或目录的物理链接")])]),a._v(" "),e("li",[e("p",[a._v("touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)")])]),a._v(" "),e("li",[e("p",[a._v("file file1 outputs the mime type of the file as text")])]),a._v(" "),e("li",[e("p",[a._v("iconv -l 列出已知的编码")])]),a._v(" "),e("li",[e("p",[a._v("iconv -f fromEncoding -t toEncoding inputFile > outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding.")])]),a._v(" "),e("li",[e("p",[a._v('find . -maxdepth 1 -name *.jpg -print -exec convert "{}" -resize 80x60 "thumbs/{}" ; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick)')])])]),a._v(" "),e("h4",{attrs:{id:"文件搜索"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件搜索"}},[a._v("#")]),a._v(" 文件搜索")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("find / -name file1 从 '/' 开始进入根文件系统搜索文件和目录")])]),a._v(" "),e("li",[e("p",[a._v("find / -user user1 搜索属于用户 'user1' 的文件和目录")])]),a._v(" "),e("li",[e("p",[a._v("find /home/user1 -name *.bin 在目录 '/ home/user1' 中搜索带有'.bin' 结尾的文件")])]),a._v(" "),e("li",[e("p",[a._v("find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件")])]),a._v(" "),e("li",[e("p",[a._v("find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件")])]),a._v(" "),e("li",[e("p",[a._v("find / -name *.rpm -exec chmod 755 '{}' ; 搜索以 '.rpm' 结尾的文件并定义其权限")])]),a._v(" "),e("li",[e("p",[a._v("find / -xdev -name *.rpm 搜索以 '.rpm' 结尾的文件，忽略光驱、捷盘等可移动设备")])]),a._v(" "),e("li",[e("p",[a._v("locate *.ps 寻找以 '.ps' 结尾的文件 - 先运行 'updatedb' 命令")])]),a._v(" "),e("li",[e("p",[a._v("whereis halt 显示一个二进制文件、源码或man的位置")])]),a._v(" "),e("li",[e("p",[a._v("which halt 显示一个二进制文件或可执行文件的完整路径")])])]),a._v(" "),e("h4",{attrs:{id:"挂载一个文件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#挂载一个文件系统"}},[a._v("#")]),a._v(" 挂载一个文件系统")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 '/ mnt/hda2' 已经存在")])]),a._v(" "),e("li",[e("p",[a._v("umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 '/ mnt/hda2' 退出")])]),a._v(" "),e("li",[e("p",[a._v("fuser -km /mnt/hda2 当设备繁忙时强制卸载")])]),a._v(" "),e("li",[e("p",[a._v("umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用")])]),a._v(" "),e("li",[e("p",[a._v("mount /dev/fd0 /mnt/floppy 挂载一个软盘")])]),a._v(" "),e("li",[e("p",[a._v("mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom")])]),a._v(" "),e("li",[e("p",[a._v("mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom")])]),a._v(" "),e("li",[e("p",[a._v("mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom")])]),a._v(" "),e("li",[e("p",[a._v("mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件")])]),a._v(" "),e("li",[e("p",[a._v("mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统")])]),a._v(" "),e("li",[e("p",[a._v("mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备")])]),a._v(" "),e("li",[e("p",[a._v("mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享")])])]),a._v(" "),e("h4",{attrs:{id:"磁盘空间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#磁盘空间"}},[a._v("#")]),a._v(" 磁盘空间")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("df -h 显示已经挂载的分区列表")])]),a._v(" "),e("li",[e("p",[a._v("ls -lSr |more 以尺寸大小排列文件和目录")])]),a._v(" "),e("li",[e("p",[a._v("du -sh dir1 估算目录 'dir1' 已经使用的磁盘空间'")])]),a._v(" "),e("li",[e("p",[a._v("du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小")])]),a._v(" "),e("li",[e("p",[a._v("rpm -q -a --qf '%10{SIZE}t%{NAME}n' | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)")])]),a._v(" "),e("li",[e("p",[a._v("dpkg-query -W -f='"),e("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[e("mjx-math",{staticClass:"MJX-TEX"},[e("mjx-TeXAtom",[e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"I"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"n"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"s"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"t"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"a"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"l"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"l"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"e"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"d"}})],1),e("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[e("mjx-c",{attrs:{c:"2212"}})],1),e("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[e("mjx-c",{attrs:{c:"S"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"i"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"z"}})],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"e"}})],1),e("mjx-mo",{staticClass:"mjx-n"},[e("mjx-c",{attrs:{c:";"}})],1),e("mjx-mn",{staticClass:"mjx-n",attrs:{space:"2"}},[e("mjx-c",{attrs:{c:"1"}}),e("mjx-c",{attrs:{c:"0"}})],1)],1),e("mjx-mi",{staticClass:"mjx-i"},[e("mjx-c",{attrs:{c:"t"}})],1)],1)],1),a._v("{Package}n' | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)")],1)])]),a._v(" "),e("h4",{attrs:{id:"用户和群组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户和群组"}},[a._v("#")]),a._v(" 用户和群组")]),a._v(" "),e("ul",[e("li",[a._v("groupadd group_name 创建一个新用户组")]),a._v(" "),e("li",[a._v("groupdel group_name 删除一个用户组")]),a._v(" "),e("li",[a._v("groupmod -n new_group_name old_group_name 重命名一个用户组")]),a._v(" "),e("li",[a._v('useradd -c "Name Surname " -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 "admin" 用户组的用户')]),a._v(" "),e("li",[a._v("useradd user1 创建一个新用户")]),a._v(" "),e("li",[a._v("userdel -r user1 删除一个用户 ( '-r' 排除主目录)")]),a._v(" "),e("li",[a._v('usermod -c "User FTP" -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性')]),a._v(" "),e("li",[a._v("passwd 修改口令")]),a._v(" "),e("li",[a._v("passwd user1 修改一个用户的口令 (只允许root执行)")]),a._v(" "),e("li",[a._v("chage -E 2005-12-31 user1 设置用户口令的失效期限")]),a._v(" "),e("li",[a._v("pwck 检查 '/etc/passwd' 的文件格式和语法修正以及存在的用户")]),a._v(" "),e("li",[a._v("grpck 检查 '/etc/passwd' 的文件格式和语法修正以及存在的群组")]),a._v(" "),e("li",[a._v("newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组")])]),a._v(" "),e("p",[a._v('文件的权限 - 使用 "+" 设置权限，使用 "-" 用于取消')]),a._v(" "),e("p",[a._v("ls -lh 显示权限")]),a._v(" "),e("p",[a._v("ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示")]),a._v(" "),e("p",[a._v("chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限")]),a._v(" "),e("p",[a._v("chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限")]),a._v(" "),e("p",[a._v("chown user1 file1 改变一个文件的所有人属性")]),a._v(" "),e("p",[a._v("chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性")]),a._v(" "),e("p",[a._v("chgrp group1 file1 改变文件的群组")]),a._v(" "),e("p",[a._v("chown user1:group1 file1 改变一个文件的所有人和群组属性")]),a._v(" "),e("p",[a._v("find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件")]),a._v(" "),e("p",[a._v("chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限")]),a._v(" "),e("p",[a._v("chmod u-s /bin/file1 禁用一个二进制文件的 SUID位")]),a._v(" "),e("p",[a._v("chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的")]),a._v(" "),e("p",[a._v("chmod g-s /home/public 禁用一个目录的 SGID 位")]),a._v(" "),e("p",[a._v("chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件")]),a._v(" "),e("p",[a._v("chmod o-t /home/public 禁用一个目录的 STIKY 位")]),a._v(" "),e("p",[a._v('文件的特殊属性 - 使用 "+" 设置权限，使用 "-" 用于取消')]),a._v(" "),e("p",[a._v("chattr +a file1 只允许以追加方式读写文件")]),a._v(" "),e("p",[a._v("chattr +c file1 允许这个文件能被内核自动压缩/解压")]),a._v(" "),e("p",[a._v("chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件")]),a._v(" "),e("p",[a._v("chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接")]),a._v(" "),e("p",[a._v("chattr +s file1 允许一个文件被安全地删除")]),a._v(" "),e("p",[a._v("chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘")]),a._v(" "),e("p",[a._v("chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件")]),a._v(" "),e("p",[a._v("lsattr 显示特殊的属性")]),a._v(" "),e("p",[a._v("打包和压缩文件")]),a._v(" "),e("p",[a._v("bunzip2 file1.bz2 解压一个叫做 'file1.bz2'的文件")]),a._v(" "),e("p",[a._v("bzip2 file1 压缩一个叫做 'file1' 的文件")]),a._v(" "),e("p",[a._v("gunzip file1.gz 解压一个叫做 'file1.gz'的文件")]),a._v(" "),e("p",[a._v("gzip file1 压缩一个叫做 'file1'的文件")]),a._v(" "),e("p",[a._v("gzip -9 file1 最大程度压缩")]),a._v(" "),e("p",[a._v("rar a file1.rar test_file 创建一个叫做 'file1.rar' 的包")]),a._v(" "),e("p",[a._v("rar a file1.rar file1 file2 dir1 同时压缩 'file1', 'file2' 以及目录 'dir1'")]),a._v(" "),e("p",[a._v("rar x file1.rar 解压rar包")]),a._v(" "),e("p",[a._v("unrar x file1.rar 解压rar包")]),a._v(" "),e("p",[a._v("tar -cvf archive.tar file1 创建一个非压缩的 tarball")]),a._v(" "),e("p",[a._v("tar -cvf archive.tar file1 file2 dir1 创建一个包含了 'file1', 'file2' 以及 'dir1'的档案文件")]),a._v(" "),e("p",[a._v("tar -tf archive.tar 显示一个包中的内容")]),a._v(" "),e("p",[a._v("tar -xvf archive.tar 释放一个包")]),a._v(" "),e("p",[a._v("tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下")]),a._v(" "),e("p",[a._v("tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包")]),a._v(" "),e("p",[a._v("tar -xvfj archive.tar.bz2 解压一个bzip2格式的压缩包")]),a._v(" "),e("p",[a._v("tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包")]),a._v(" "),e("p",[a._v("tar -xvfz archive.tar.gz 解压一个gzip格式的压缩包")]),a._v(" "),e("p",[a._v("zip "),e("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//file1.zip/",target:"_blank",rel:"noopener noreferrer"}},[a._v("file1.zip"),e("OutboundLink")],1),a._v(" file1 创建一个zip格式的压缩包")]),a._v(" "),e("p",[a._v("zip -r "),e("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//file1.zip/",target:"_blank",rel:"noopener noreferrer"}},[a._v("file1.zip"),e("OutboundLink")],1),a._v(" file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包")]),a._v(" "),e("p",[a._v("unzip "),e("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//file1.zip/",target:"_blank",rel:"noopener noreferrer"}},[a._v("file1.zip"),e("OutboundLink")],1),a._v(" 解压一个zip格式压缩包")]),a._v(" "),e("h4",{attrs:{id:"看文件内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#看文件内容"}},[a._v("#")]),a._v(" 看文件内容")]),a._v(" "),e("ul",[e("li",[a._v("cat file1 从第一个字节开始正向查看文件的内容")]),a._v(" "),e("li",[a._v("tac file1 从最后一行开始反向查看一个文件的内容")]),a._v(" "),e("li",[a._v("more file1 查看一个长文件的内容")]),a._v(" "),e("li",[a._v("less file1 类似于 'more' 命令，但是它允许在文件中和正向操作一样的反向操作")]),a._v(" "),e("li",[a._v("head -2 file1 查看一个文件的前两行")]),a._v(" "),e("li",[a._v("tail -2 file1 查看一个文件的最后两行")]),a._v(" "),e("li",[a._v("tail -f /var/log/messages 实时查看被添加到一个文件中的内容")])]),a._v(" "),e("h4",{attrs:{id:"文本处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文本处理"}},[a._v("#")]),a._v(" 文本处理")]),a._v(" "),e("ul",[e("li",[a._v("cat file1 file2 ... | command <> file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT")]),a._v(" "),e("li",[a._v("cat file1 | command( sed, grep, awk, grep, etc...) > result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中")]),a._v(" "),e("li",[a._v("cat file1 | command( sed, grep, awk, grep, etc...) >> result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中")]),a._v(" "),e("li",[a._v("grep Aug /var/log/messages 在文件 '/var/log/messages'中查找关键词\"Aug\"")]),a._v(" "),e("li",[a._v("grep ^Aug /var/log/messages 在文件 '/var/log/messages'中查找以\"Aug\"开始的词汇")]),a._v(" "),e("li",[a._v("grep [0-9] /var/log/messages 选择 '/var/log/messages' 文件中所有包含数字的行")]),a._v(" "),e("li",[a._v("grep Aug -R /var/log/* 在目录 '/var/log' 及随后的目录中搜索字符串\"Aug\"")]),a._v(" "),e("li",[a._v('sed \'s/stringa1/stringa2/g\' example.txt 将example.txt文件中的 "string1" 替换成 "string2"')]),a._v(" "),e("li",[a._v("sed '/^$/d' example.txt 从example.txt文件中删除所有空白行")]),a._v(" "),e("li",[a._v("sed '/ *#/d; /^$/d' example.txt 从example.txt文件中删除所有注释和空白行")]),a._v(" "),e("li",[a._v("echo 'esempio' | tr '[:lower:]' '[:upper:]' 合并上下单元格内容")]),a._v(" "),e("li",[a._v("sed -e '1d' result.txt 从文件example.txt 中排除第一行")]),a._v(" "),e("li",[a._v("sed -n '/stringa1/p' 查看只包含词汇 \"string1\"的行")]),a._v(" "),e("li",[a._v("sed -e 's/ *$//' example.txt 删除每一行最后的空白字符")]),a._v(" "),e("li",[a._v("sed -e 's/stringa1//g' example.txt 从文档中只删除词汇 \"string1\" 并保留剩余全部")]),a._v(" "),e("li",[a._v("sed -n '1,5p;5q' example.txt 查看从第一行到第5行内容")]),a._v(" "),e("li",[a._v("sed -n '5p;5q' example.txt 查看第5行")]),a._v(" "),e("li",[a._v("sed -e 's/00*/0/g' example.txt 用单个零替换多个零")]),a._v(" "),e("li",[a._v("cat -n file1 标示文件的行数")]),a._v(" "),e("li",[a._v("cat example.txt | awk 'NR%2==1' 删除example.txt文件中的所有偶数行")]),a._v(" "),e("li",[a._v("echo a b c | awk '{print $1}' 查看一行第一栏")]),a._v(" "),e("li",[a._v("echo a b c | awk '{print $1,$3}' 查看一行的第一和第三栏")]),a._v(" "),e("li",[a._v("paste file1 file2 合并两个文件或两栏的内容")]),a._v(" "),e("li",[a._v("paste -d '+' file1 file2 合并两个文件或两栏的内容，中间用\"+\"区分")]),a._v(" "),e("li",[a._v("sort file1 file2 排序两个文件的内容")]),a._v(" "),e("li",[a._v("sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份)")]),a._v(" "),e("li",[a._v("sort file1 file2 | uniq -u 删除交集，留下其他的行")]),a._v(" "),e("li",[a._v("sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件)")]),a._v(" "),e("li",[a._v("comm -1 file1 file2 比较两个文件的内容只删除 'file1' 所包含的内容")]),a._v(" "),e("li",[a._v("comm -2 file1 file2 比较两个文件的内容只删除 'file2' 所包含的内容")]),a._v(" "),e("li",[a._v("comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分")])]),a._v(" "),e("h4",{attrs:{id:"字符设置和文件格式转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符设置和文件格式转换"}},[a._v("#")]),a._v(" 字符设置和文件格式转换")]),a._v(" "),e("ul",[e("li",[a._v("dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX")]),a._v(" "),e("li",[a._v("unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS")]),a._v(" "),e("li",[a._v("recode ..HTML < page.txt > page.html 将一个文本文件转换成html")]),a._v(" "),e("li",[a._v("recode -l | more 显示所有允许的转换格式")])]),a._v(" "),e("h4",{attrs:{id:"文件系统分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件系统分析"}},[a._v("#")]),a._v(" 文件系统分析")]),a._v(" "),e("ul",[e("li",[a._v("badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块")]),a._v(" "),e("li",[a._v("fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性")]),a._v(" "),e("li",[a._v("fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性")]),a._v(" "),e("li",[a._v("e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性")]),a._v(" "),e("li",[a._v("e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性")]),a._v(" "),e("li",[a._v("fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性")]),a._v(" "),e("li",[a._v("fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性")]),a._v(" "),e("li",[a._v("fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性")]),a._v(" "),e("li",[a._v("dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性")])]),a._v(" "),e("h4",{attrs:{id:"初始化一个文件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化一个文件系统"}},[a._v("#")]),a._v(" 初始化一个文件系统")]),a._v(" "),e("ul",[e("li",[a._v("mkfs /dev/hda1 在hda1分区创建一个文件系统")]),a._v(" "),e("li",[a._v("mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统")]),a._v(" "),e("li",[a._v("mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统")]),a._v(" "),e("li",[a._v("mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统")]),a._v(" "),e("li",[a._v("fdformat -n /dev/fd0 格式化一个软盘")]),a._v(" "),e("li",[a._v("mkswap /dev/hda3 创建一个swap文件系统")])]),a._v(" "),e("h4",{attrs:{id:"swap文件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swap文件系统"}},[a._v("#")]),a._v(" SWAP文件系统")]),a._v(" "),e("ul",[e("li",[a._v("mkswap /dev/hda3 创建一个swap文件系统")]),a._v(" "),e("li",[a._v("swapon /dev/hda3 启用一个新的swap文件系统")]),a._v(" "),e("li",[a._v("swapon /dev/hda2 /dev/hdb3 启用两个swap分区")])]),a._v(" "),e("h4",{attrs:{id:"备份"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#备份"}},[a._v("#")]),a._v(" 备份")]),a._v(" "),e("ul",[e("li",[a._v("dump -0aj -f /tmp/home0.bak /home 制作一个 '/home' 目录的完整备份")]),a._v(" "),e("li",[a._v("dump -1aj -f /tmp/home0.bak /home 制作一个 '/home' 目录的交互式备份")]),a._v(" "),e("li",[a._v("restore -if /tmp/home0.bak 还原一个交互式备份")]),a._v(" "),e("li",[a._v("rsync -rogpav --delete /home /tmp 同步两边的目录")]),a._v(" "),e("li",[a._v("rsync -rogpav -e ssh --delete /home ip_address:/tmp 通过SSH通道rsync")]),a._v(" "),e("li",[a._v("rsync -az -e ssh --delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录")]),a._v(" "),e("li",[a._v("rsync -az -e ssh --delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录")]),a._v(" "),e("li",[a._v("dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr 'dd of=hda.gz' 通过ssh在远程主机上执行一次备份本地磁盘的操作")]),a._v(" "),e("li",[a._v("dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件")]),a._v(" "),e("li",[a._v("tar -Puf backup.tar /home/user 执行一次对 '/home/user' 目录的交互式备份操作")]),a._v(" "),e("li",[a._v("( cd /tmp/local/ && tar c . ) | ssh -C user@ip_addr 'cd /home/share/ && tar x -p' 通过ssh在远程目录中复制一个目录内容")]),a._v(" "),e("li",[a._v("( tar c /home ) | ssh -C user@ip_addr 'cd /home/backup-home && tar x -p' 通过ssh在远程目录中复制一个本地目录")]),a._v(" "),e("li",[a._v("tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接")]),a._v(" "),e("li",[a._v("find /home/user1 -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents 从一个目录查找并复制所有以 '.txt' 结尾的文件到另一个目录")]),a._v(" "),e("li",[a._v("find /var/log -name '*.log' | tar cv --files-from=- | bzip2 > log.tar.bz2 查找所有以 '.log' 结尾的文件并做成一个bzip包")]),a._v(" "),e("li",[a._v("dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作")]),a._v(" "),e("li",[a._v("dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容")])]),a._v(" "),e("h4",{attrs:{id:"光盘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#光盘"}},[a._v("#")]),a._v(" 光盘")]),a._v(" "),e("ul",[e("li",[a._v("cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容")]),a._v(" "),e("li",[a._v("mkisofs /dev/cdrom > cd.iso 在磁盘上创建一个光盘的iso镜像文件")]),a._v(" "),e("li",[a._v("mkisofs /dev/cdrom | gzip > cd_iso.gz 在磁盘上创建一个压缩了的光盘iso镜像文件")]),a._v(" "),e("li",[a._v('mkisofs -J -allow-leading-dots -R -V "Label CD" -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件')]),a._v(" "),e("li",[a._v("cdrecord -v dev=/dev/cdrom cd.iso 刻录一个ISO镜像文件")]),a._v(" "),e("li",[a._v("gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件")]),a._v(" "),e("li",[a._v("mount -o loop cd.iso /mnt/iso 挂载一个ISO镜像文件")]),a._v(" "),e("li",[a._v("cd-paranoia -B 从一个CD光盘转录音轨到 wav 文件中")]),a._v(" "),e("li",[a._v('cd-paranoia -- "-3" 从一个CD光盘转录音轨到 wav 文件中（参数-3）')]),a._v(" "),e("li",[a._v("cdrecord --scanbus 扫描总线以识别scsi通道")]),a._v(" "),e("li",[a._v("dd if=/dev/hdc | md5sum 校验一个设备的md5sum编码，例如一张 CD")])]),a._v(" "),e("h4",{attrs:{id:"网络-以太网和wifi无线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络-以太网和wifi无线"}},[a._v("#")]),a._v(" 网络 - （以太网和WIFI无线）")]),a._v(" "),e("ul",[e("li",[a._v("ifconfig eth0 显示一个以太网卡的配置")]),a._v(" "),e("li",[a._v("ifup eth0 启用一个 'eth0' 网络设备")]),a._v(" "),e("li",[a._v("ifdown eth0 禁用一个 'eth0' 网络设备")]),a._v(" "),e("li",[a._v("ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址")]),a._v(" "),e("li",[a._v("ifconfig eth0 promisc 设置 'eth0' 成混杂模式以嗅探数据包 (sniffing)")]),a._v(" "),e("li",[a._v("dhclient eth0 以dhcp模式启用 'eth0'")]),a._v(" "),e("li",[a._v("route -n show routing table")]),a._v(" "),e("li",[a._v("route add -net 0/0 gw IP_Gateway configura default gateway")]),a._v(" "),e("li",[a._v("route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network '192.168.0.0/16'")]),a._v(" "),e("li",[a._v("route del 0/0 gw IP_gateway remove static route")]),a._v(" "),e("li",[a._v('echo "1" > /proc/sys/net/ipv4/ip_forward activate ip routing')]),a._v(" "),e("li",[a._v("hostname show hostname of system")]),a._v(" "),e("li",[a._v("host "),e("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//www.example.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Example Domain"),e("OutboundLink")],1),a._v(" lookup hostname to resolve name to ip address and viceversa(1)")]),a._v(" "),e("li",[a._v("nslookup "),e("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//www.example.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Example Domain"),e("OutboundLink")],1),a._v(" lookup hostname to resolve name to ip address and viceversa(2)")]),a._v(" "),e("li",[a._v("ip link show show link status of all interfaces")]),a._v(" "),e("li",[a._v("mii-tool eth0 show link status of 'eth0'")]),a._v(" "),e("li",[a._v("ethtool eth0 show statistics of network card 'eth0'")]),a._v(" "),e("li",[a._v("netstat -tup show all active network connections and their PID")]),a._v(" "),e("li",[a._v("netstat -tupl show all network services listening on the system and their PID")]),a._v(" "),e("li",[a._v("tcpdump tcp port 80 show all HTTP traffic")]),a._v(" "),e("li",[a._v("iwlist scan show wireless networks")]),a._v(" "),e("li",[a._v("iwconfig eth1 show configuration of a wireless network card")]),a._v(" "),e("li",[a._v("hostname show hostname")]),a._v(" "),e("li",[a._v("host "),e("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//www.example.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Example Domain"),e("OutboundLink")],1),a._v(" lookup hostname to resolve name to ip address and viceversa")]),a._v(" "),e("li",[a._v("nslookup "),e("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//www.example.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Example Domain"),e("OutboundLink")],1),a._v(" lookup hostname to resolve name to ip address and viceversa")]),a._v(" "),e("li",[a._v("whois "),e("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//www.example.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Example Domain"),e("OutboundLink")],1),a._v(" lookup on Whois database")])]),a._v(" "),e("h4",{attrs:{id:"jps工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jps工具"}},[a._v("#")]),a._v(" JPS工具")]),a._v(" "),e("p",[a._v("jps(Java Virtual Machine Process Status Tool)是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。")]),a._v(" "),e("p",[a._v("我想很多人都是用过unix系统里的ps命令，这个命令主要是用来显示当前系统的进程情况，有哪些进程，及其 id。 jps 也是一样，它的作用是显示当前系统的java进程情况，及其id号。我们可以通过它来查看我们到底启动了几个java进程（因为每一个java程序都会独占一个java虚拟机实例），和他们的进程号（为下面几个程序做准备），并可通过opt来查看这些进程的详细启动参数。")]),a._v(" "),e("p",[a._v("使用方法：在当前命令行下打 jps(需要JAVA_HOME，没有的话，到改程序的目录下打) 。")]),a._v(" "),e("p",[a._v("jps存放在JAVA_HOME/bin/jps，使用时为了方便请将JAVA_HOME/bin/加入到Path.")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$> jps\n\n23991 Jps\n23789 BossMain\n23651 Resin\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("比较常用的参数：-q 只显示pid，不显示class名称,jar文件名和传递给main 方法的参数")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$> jps -q\n\n28680\n23789\n23651\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("-m 输出传递给main 方法的参数，在嵌入式jvm上可能是null")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$> jps -m\n\n28715 Jps -m\n23789 BossMain\n23651 Resin -socketwait 32768 -stdout /data/aoxj/resin/log/stdout.log -stderr /data/aoxj/resin/log/stderr.log\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("-l 输出应用程序main class的完整package名 或者 应用程序的jar文件完整路径名")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$> jps -l\n\n28729 sun.tools.jps.Jps\n23789 com.asiainfo.aimc.bossbi.BossMain\n23651 com.caucho.server.resin.Resin\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("-v 输出传递给JVM的参数")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$> jps -v\n\n23789 BossMain\n28802 Jps -Denv.class.path=/data/aoxj/bossbi/twsecurity/java/trustwork140.jar:/data/aoxj/bossbi/twsecurity/java/:/data/aoxj/bossbi/twsecurity/java/twcmcc.jar:/data/aoxj/jdk15/lib/rt.jar:/data/aoxj/jd\nk15/lib/tools.jar -Dapplication.home=/data/aoxj/jdk15 -Xms8m\n23651 Resin -Xss1m -Dresin.home=/data/aoxj/resin -Dserver.root=/data/aoxj/resin -Djava.util.logging.manager=com.caucho.log.LogManagerImpl \n\nDjavax.management.builder.initial=com.caucho.jmx.MBeanServerBuilderImpl\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("p",[a._v("sudo jps看到的进程数量最全")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("jps 192.168.0.77\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("列出远程服务器192.168.0.77机器所有的jvm实例，采用rmi协议，默认连接端口为1099")]),a._v(" "),e("p",[a._v("（前提是远程服务器提供jstatd服务）")]),a._v(" "),e("p",[a._v("注：jps命令有个地方很不好，似乎只能显示当前用户的java进程，要显示其他用户的还是只能用unix/linux的ps命令。")]),a._v(" "),e("h4",{attrs:{id:"rpm-包-fedora-redhat及类似系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rpm-包-fedora-redhat及类似系统"}},[a._v("#")]),a._v(" RPM 包 - （Fedora, Redhat及类似系统）")]),a._v(" "),e("ul",[e("li",[a._v("rpm -ivh package.rpm 安装一个rpm包")]),a._v(" "),e("li",[a._v("rpm -ivh --nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告")]),a._v(" "),e("li",[a._v("rpm -U package.rpm 更新一个rpm包但不改变其配置文件")]),a._v(" "),e("li",[a._v("rpm -F package.rpm 更新一个确定已经安装的rpm包")]),a._v(" "),e("li",[a._v("rpm -e package_name.rpm 删除一个rpm包")]),a._v(" "),e("li",[a._v("rpm -qa 显示系统中所有已经安装的rpm包")]),a._v(" "),e("li",[a._v('rpm -qa | grep httpd 显示所有名称中包含 "httpd" 字样的rpm包')]),a._v(" "),e("li",[a._v("rpm -qi package_name 获取一个已安装包的特殊信息")]),a._v(" "),e("li",[a._v('rpm -qg "System Environment/Daemons" 显示一个组件的rpm包')]),a._v(" "),e("li",[a._v("rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表")]),a._v(" "),e("li",[a._v("rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表")]),a._v(" "),e("li",[a._v("rpm -q package_name --whatrequires 显示与一个rpm包存在依赖关系的列表")]),a._v(" "),e("li",[a._v("rpm -q package_name --whatprovides 显示一个rpm包所占的体积")]),a._v(" "),e("li",[a._v("rpm -q package_name --scripts 显示在安装/删除期间所执行的脚本l")]),a._v(" "),e("li",[a._v("rpm -q package_name --changelog 显示一个rpm包的修改历史")]),a._v(" "),e("li",[a._v("rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供")]),a._v(" "),e("li",[a._v("rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表")]),a._v(" "),e("li",[a._v("rpm --import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书")]),a._v(" "),e("li",[a._v("rpm --checksig package.rpm 确认一个rpm包的完整性")]),a._v(" "),e("li",[a._v("rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性")]),a._v(" "),e("li",[a._v("rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间")]),a._v(" "),e("li",[a._v("rpm -Va 检查系统中所有已安装的rpm包- 小心使用")]),a._v(" "),e("li",[a._v("rpm -Vp package.rpm 确认一个rpm包还未安装")]),a._v(" "),e("li",[a._v("rpm2cpio package.rpm | cpio --extract --make-directories "),e("em",[a._v("bin")]),a._v(" 从一个rpm包运行可执行文件")]),a._v(" "),e("li",[a._v("rpm -ivh /usr/src/redhat/RPMS/"),e("code",[a._v("arch")]),a._v("/package.rpm 从一个rpm源码安装一个构建好的包")]),a._v(" "),e("li",[a._v("rpmbuild --rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包")])]),a._v(" "),e("h4",{attrs:{id:"yum-软件包升级器-fedora-redhat及类似系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yum-软件包升级器-fedora-redhat及类似系统"}},[a._v("#")]),a._v(" YUM 软件包升级器 - （Fedora, RedHat及类似系统）")]),a._v(" "),e("ul",[e("li",[a._v("yum install package_name 下载并安装一个rpm包")]),a._v(" "),e("li",[a._v("yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系")]),a._v(" "),e("li",[a._v("yum update package_name.rpm 更新当前系统中所有安装的rpm包")]),a._v(" "),e("li",[a._v("yum update package_name 更新一个rpm包")]),a._v(" "),e("li",[a._v("yum remove package_name 删除一个rpm包")]),a._v(" "),e("li",[a._v("yum list 列出当前系统中安装的所有包")]),a._v(" "),e("li",[a._v("yum search package_name 在rpm仓库中搜寻软件包")]),a._v(" "),e("li",[a._v("yum clean packages 清理rpm缓存删除下载的包")]),a._v(" "),e("li",[a._v("yum clean headers 删除所有头文件")]),a._v(" "),e("li",[a._v("yum clean all 删除所有缓存的包和头文件")])]),a._v(" "),e("h4",{attrs:{id:"deb-包-debian-ubuntu-以及类似系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deb-包-debian-ubuntu-以及类似系统"}},[a._v("#")]),a._v(" DEB 包 (Debian, Ubuntu 以及类似系统)")]),a._v(" "),e("ul",[e("li",[a._v("dpkg -i package.deb 安装/更新一个 deb 包")]),a._v(" "),e("li",[a._v("dpkg -r package_name 从系统删除一个 deb 包")]),a._v(" "),e("li",[a._v("dpkg -l 显示系统中所有已经安装的 deb 包")]),a._v(" "),e("li",[a._v('dpkg -l | grep httpd 显示所有名称中包含 "httpd" 字样的deb包')]),a._v(" "),e("li",[a._v("dpkg -s package_name 获得已经安装在系统中一个特殊包的信息")]),a._v(" "),e("li",[a._v("dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表")]),a._v(" "),e("li",[a._v("dpkg --contents package.deb 显示尚未安装的一个包所提供的文件列表")]),a._v(" "),e("li",[a._v("dpkg -S /bin/ping 确认所给的文件由哪个deb包提供")])]),a._v(" "),e("h4",{attrs:{id:"apt-软件工具-debian-ubuntu-以及类似系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apt-软件工具-debian-ubuntu-以及类似系统"}},[a._v("#")]),a._v(" APT 软件工具 (Debian, Ubuntu 以及类似系统)")]),a._v(" "),e("ul",[e("li",[a._v("apt-get install package_name 安装/更新一个 deb 包")]),a._v(" "),e("li",[a._v("apt-cdrom install package_name 从光盘安装/更新一个 deb 包")]),a._v(" "),e("li",[a._v("apt-get update 升级列表中的软件包")]),a._v(" "),e("li",[a._v("apt-get upgrade 升级所有已安装的软件")]),a._v(" "),e("li",[a._v("apt-get remove package_name 从系统删除一个deb包")]),a._v(" "),e("li",[a._v("apt-get check 确认依赖的软件仓库正确")]),a._v(" "),e("li",[a._v("apt-get clean 从下载的软件包中清理缓存")]),a._v(" "),e("li",[a._v("apt-cache search searched-package 返回包含所要搜索字符串的软件包名称")])])])}),[],!1,null,null,null);e.default=v.exports}}]);